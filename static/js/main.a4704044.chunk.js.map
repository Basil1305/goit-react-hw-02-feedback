{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/statistics/Statistics.js","components/section/Section.js","components/notification/Notification.js","components/App.js","index.js"],"names":["FeedbackOptions","onClickGood","onClickNeutral","onClickBad","type","onClick","Statistics","this","props","goodNum","neutralNum","badNum","Math","round","Component","Section","title","children","Notification","message","App","state","good","neutral","bad","PressGood","setState","PressNeutral","PressBad","isShowStatistic","ReactDOM","render","document","getElementById"],"mappings":"yOAkBeA,EAhBS,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACtD,OACE,oCACE,4BAAQC,KAAK,SAASC,QAASJ,GAA/B,QAGA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,WAGA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,SCTeG,E,uKAEjB,OACE,oCACE,qCAAWC,KAAKC,MAAMC,SACtB,wCAAcF,KAAKC,MAAME,YACzB,oCAAUH,KAAKC,MAAMG,QACrB,qCACS,IACNJ,KAAKC,MAAMG,OAASJ,KAAKC,MAAME,WAAaH,KAAKC,MAAMC,SAE1D,iDAEGG,KAAKC,MACH,KACEN,KAAKC,MAAMG,OACVJ,KAAKC,MAAME,WACXH,KAAKC,MAAMC,SACbF,KAAKC,MAAMC,SACX,U,GAnB0BK,aCSzBC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BAASD,MAAOA,GACd,4BAAKA,GACJC,ICAQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICIOC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,UAAY,kBAAM,EAAKC,SAAS,CAAEJ,KAAM,EAAKD,MAAMC,KAAO,K,EAE1DK,aAAe,kBAAM,EAAKD,SAAS,CAAEH,QAAS,EAAKF,MAAME,QAAU,K,EAEnEK,SAAW,kBAAM,EAAKF,SAAS,CAAEF,IAAK,EAAKH,MAAMG,IAAM,K,uDAGrD,IAAMK,EACJtB,KAAKc,MAAMC,KAAO,GAAKf,KAAKc,MAAME,QAAU,GAAKhB,KAAKc,MAAMG,IAAM,EACpE,OACE,oCACE,kBAAC,EAAD,CAASR,MAAM,yBACb,kBAAC,EAAD,CACEf,YAAaM,KAAKkB,UAClBvB,eAAgBK,KAAKoB,aACrBxB,WAAYI,KAAKqB,YAGrB,kBAAC,EAAD,CAASZ,MAAM,cACZa,EACC,kBAAC,EAAD,CACEpB,QAASF,KAAKc,MAAMC,KACpBZ,WAAYH,KAAKc,MAAME,QACvBZ,OAAQJ,KAAKc,MAAMG,MAGrB,kBAAC,EAAD,CAAcL,QAAQ,4B,GAjCDL,a,MCAjCgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a4704044.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ onClickGood, onClickNeutral, onClickBad }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={onClickGood}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onClickNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onClickBad}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Statistics extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Good: {this.props.goodNum}</h3>\r\n        <h3>Neutral: {this.props.neutralNum}</h3>\r\n        <h3>Bad: {this.props.badNum}</h3>\r\n        <h3>\r\n          Total:{\" \"}\r\n          {this.props.badNum + this.props.neutralNum + this.props.goodNum}\r\n        </h3>\r\n        <h3>\r\n          Positive feedback:\r\n          {Math.round(\r\n            (100 /\r\n              (this.props.badNum +\r\n                this.props.neutralNum +\r\n                this.props.goodNum)) *\r\n              this.props.goodNum\r\n          ) + \"%\"}\r\n        </h3>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section title={title}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h3>{message}</h3>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\n\r\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport Section from \"./section/Section\";\r\nimport Notification from \"./notification/Notification\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  PressGood = () => this.setState({ good: this.state.good + 1 });\r\n\r\n  PressNeutral = () => this.setState({ neutral: this.state.neutral + 1 });\r\n\r\n  PressBad = () => this.setState({ bad: this.state.bad + 1 });\r\n\r\n  render() {\r\n    const isShowStatistic =\r\n      this.state.good > 0 || this.state.neutral > 0 || this.state.bad > 0;\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            onClickGood={this.PressGood}\r\n            onClickNeutral={this.PressNeutral}\r\n            onClickBad={this.PressBad}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {isShowStatistic ? (\r\n            <Statistics\r\n              goodNum={this.state.good}\r\n              neutralNum={this.state.neutral}\r\n              badNum={this.state.bad}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}